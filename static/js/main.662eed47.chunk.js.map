{"version":3,"sources":["components/containers/CardList.tsx","components/navigation/Navigation.tsx","components/charts/VideoChart.tsx","components/containers/Video.tsx","components/containers/History.tsx","components/charts/FramingChart.tsx","components/containers/Framing.tsx","components/containers/Settings.tsx","api.ts","components/containers/ErrorMessage.tsx","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["cardData","title","path","Card","videoData","framingData","encryptionData","to","className","generateVideoCardData","generateFramingCardData","generateEncryptionCardData","CardList","map","card","key","data","ping","bitrate","protocol","protocolVersion","errorsDetected","errorsCorrected","iconClassName","isEnabled","type","Navigation","menuItems","item","link","icon","VideoChart","useState","labels","setLabels","useEffect","setInterval","date","dayjs","Date","now","format","toString","dataBitrate","datasets","label","d","fill","backgroundColor","borderColor","dataPing","options","scales","yAxes","ticks","beginAtZero","Video","History","as","open","Button","Panel","FramingChart","stacked","xAxes","Framing","Settings","useForm","register","handleSubmit","errors","formState","console","log","inputClassName","onSubmit","axios","post","then","catch","placeholder","backend","create","baseURL","timeout","ErrorMessage","id","App","setVideoData","setFramingData","setEncryptionData","pollData","acc","setter","endpoint","a","get","response","length","shift","newData","setTimeout","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","error","reportWebVitals","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.662eed47.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { IEncryptionData, IFramingData, IVideoData } from '../../types/api/data';\nimport { HiLockClosed, HiLockOpen, HiRefresh } from 'react-icons/all';\n\nconst transition = { duration: 0.5, ease: [0.43, 0.13, 0.23, 0.96] };\n\nconst thumbnailVariants = {\n\tinitial: { scale: 0.9, opacity: 0 },\n\tenter: { scale: 1, opacity: 1, transition },\n\texit: {\n\t\tscale: 0.5,\n\t\topacity: 0,\n\t\ttransition: { duration: 1.5 }\n\t}\n};\n\ntype data = {\n\ttitle: string;\n\tpath: string;\n};\n\nconst cardData: data[] = [\n\t{ title: 'Video', path: 'video' },\n\t{ title: 'Framing', path: 'framing' },\n\t{ title: 'Encryption', path: 'encryption' }\n];\n\ntype ICardProps = {\n\ttitle: string;\n\tpath: string;\n\tvideoData?: IVideoData;\n\tframingData?: IFramingData;\n\tencryptionData?: IEncryptionData;\n};\n\nconst Card: React.FC<ICardProps> = ({ title, path, videoData, framingData, encryptionData }) => (\n\t<Link to={path}>\n\t\t<div className='rounded-2xl border border-gray-100 shadow-md h-48 max-h-48 md:p-8 relative'>\n\t\t\t<h2 className='font-medium text-lg'>{title}</h2>\n\t\t\t{path === 'video' && generateVideoCardData(videoData)}\n\t\t\t{path === 'framing' && generateFramingCardData(framingData)}\n\t\t\t{path === 'encryption' && generateEncryptionCardData(encryptionData)}\n\t\t\t<div className='flex flex-col absolute bottom-0 m-2'>\n\t\t\t\t<hr className='border-gray-100 w-full' />\n\t\t\t\t<div className='inline-flex items-center text-gray-500'>\n\t\t\t\t\t<HiRefresh className='h-4 w-4 mr-2' />\n\t\t\t\t\t<p>Last updated: 5 min ago</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</Link>\n);\n\ntype ICardListProps = {\n\tvideoData?: IVideoData;\n\tframingData?: IFramingData;\n\tencryptionData?: IEncryptionData;\n};\nconst CardList: React.FC<ICardListProps> = ({ videoData, framingData, encryptionData }) => {\n\treturn (\n\t\t<>\n\t\t\t<div className='grid grid-rows-1 md:grid-flow-col px-8 gap-8 h-full py-8'>\n\t\t\t\t{cardData.map((card, key) => (\n\t\t\t\t\t<Card title={card.title} path={card.path} key={key} videoData={videoData} framingData={framingData} encryptionData={encryptionData} />\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</>\n\t);\n};\nexport default CardList;\n\nconst generateVideoCardData = (data: IVideoData | undefined) => {\n\treturn (\n\t\t<div>\n\t\t\t<p>Ping: {data?.ping}</p>\n\t\t\t<p>Bitrate: {data?.bitrate}</p>\n\t\t\t<p>Proctol: {data?.protocol}</p>\n\t\t\t<p>Protocol Version: {data?.protocolVersion}</p>\n\t\t</div>\n\t);\n};\n\nconst generateFramingCardData = (data: IFramingData | undefined) => {\n\treturn (\n\t\t<div>\n\t\t\t<p>Errors detected {data?.errorsDetected}</p>\n\t\t\t<p>Errors corrected {data?.errorsCorrected}</p>\n\t\t</div>\n\t);\n};\n\nconst generateEncryptionCardData = (data: IEncryptionData | undefined) => {\n\tconst iconClassName = 'w-full h-14';\n\treturn (\n\t\t<div className='items-center text-center w-full h-full'>\n\t\t\t{data?.isEnabled ? <HiLockClosed className={`${iconClassName} text-green-400`} /> : <HiLockOpen className={`${iconClassName} text-red-400`} />}\n\t\t\t<p>{`Type: ${data?.type}`}</p>\n\t\t</div>\n\t);\n};\n","import React from 'react';\nimport { IMenuItem } from '../../types/MenuItems';\nimport { Link } from 'react-router-dom';\n\ntype IProps = { menuItems: IMenuItem[] };\n\nconst Navigation: React.FC<IProps> = ({ menuItems }) => {\n\treturn (\n\t\t<nav className='w-full fixed bottom-0 h-12 shadow-md border border-gray-100 z-10 bg-white'>\n\t\t\t<div className='justify-between place-content-center flex flex-row h-full items-center px-12'>\n\t\t\t\t{menuItems.map((item, key) => (\n\t\t\t\t\t<Link to={item.link} key={key}>\n\t\t\t\t\t\t<div className='flex flex-col items-center'>\n\t\t\t\t\t\t\t<span>{item.icon}</span>\n\t\t\t\t\t\t\t<p className='uppercase tracking-widest'>{item.title}</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Link>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</nav>\n\t);\n};\nexport default Navigation;\n","import React, { useState, useEffect } from 'react';\nimport { IVideoData } from '../../types/api/data';\nimport { Line } from 'react-chartjs-2';\nimport dayjs from 'dayjs';\n\ntype IProps = { videoData: IVideoData[] };\n\nconst VideoChart: React.FC<IProps> = ({ videoData }) => {\n\tconst [labels, setLabels] = useState<string[]>([]);\n\n\tconst makeTimeLabels = () => {\n\t\tsetInterval(() => {\n\t\t\tconst date = dayjs(Date.now()).format('HH:mm:ss').toString();\n\t\t\tsetLabels([...labels, date]);\n\t\t}, 10000);\n\t};\n\n\tuseEffect(() => makeTimeLabels(), [labels, setLabels]);\n\n\tconst dataBitrate = {\n\t\tlabels,\n\t\tdatasets: [\n\t\t\t{\n\t\t\t\tlabel: 'Bitrate',\n\t\t\t\tdata: videoData.map((d) => d.bitrate),\n\t\t\t\tfill: false,\n\t\t\t\tbackgroundColor: 'rgb(255, 99, 132)',\n\t\t\t\tborderColor: 'rgba(255, 99, 132, 0.2)'\n\t\t\t}\n\t\t]\n\t};\n\n\tconst dataPing = {\n\t\tlabels: labels,\n\t\tdatasets: [\n\t\t\t{\n\t\t\t\tlabel: 'Ping',\n\t\t\t\tdata: videoData.map((d) => d.ping),\n\t\t\t\tfill: false,\n\t\t\t\tbackgroundColor: 'rgb(54,232,196)',\n\t\t\t\tborderColor: 'rgba(76,250,193,0.2)'\n\t\t\t}\n\t\t]\n\t};\n\n\tconst options = {\n\t\tscales: {\n\t\t\tyAxes: [\n\t\t\t\t{\n\t\t\t\t\tticks: {\n\t\t\t\t\t\tbeginAtZero: true\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<Line options={options} data={dataBitrate} type='line' />\n\t\t\t<Line options={options} data={dataPing} type='line' />\n\t\t</>\n\t);\n};\n\nexport default VideoChart;\n","import React from 'react';\nimport { IVideoData } from '../../types/api/data';\nimport VideoChart from '../charts/VideoChart';\nimport {HiAdjustments, HiVideoCamera} from \"react-icons/hi\";\n\ntype IProps = { data?: IVideoData[] };\n\nconst Video: React.FC<IProps> = ({ data }) => {\n\treturn (\n\t\t<>\n\t\t\t<div className='w-full px-4 pt-5'>\n\t\t\t\t<h1 className='text-center text-2xl'>\n\t\t\t\t\tVIDEO DATA\n\t\t\t\t</h1>\n\t\t\t</div>\n\n\t\t\t<div className='text-red-500 m-4'>\n\t\t\t\t<p>\n\t\t\t\t\tThe bitrate is the number of bits that are conveyed per unit of time in the data\n\t\t\t\t</p>\n\t\t\t</div>\n\n\t\t\t<div className='text-green-300 m-4'>\n\t\t\t\t<p>\n\t\t\t\t\tThe ping measures the minimum time needed to send the smallest amount of data and receive response\n\t\t\t\t</p>\n\t\t\t</div>\n\n\t\t\t<VideoChart videoData={data ?? []} />\n\t\t</>\n\t);\n};\nexport default Video;\n","import React from 'react';\nimport { Disclosure } from '@headlessui/react';\nimport { IEncryptionData, IFramingData, IVideoData } from '../../types/api/data';\nimport { HiArrowNarrowDown } from 'react-icons/all';\nimport { FaHistory } from 'react-icons/fa';\n\ntype IProps = { videoData?: IVideoData[]; framingData: IFramingData[]; encryptionData: IEncryptionData[] };\n\nconst History: React.FC<IProps> = ({ videoData, framingData, encryptionData }) => {\n\treturn (\n\t\t<div className='w-full px-4 pt-16'>\n\t\t\t<h1 className='text-center text-2xl'>\n\t\t\t\t<FaHistory className='mr-2 inline' />\n\t\t\t\tPrevious transmissions\n\t\t\t</h1>\n\t\t\t<div className='w-full max-w-md p-2 mx-auto bg-white rounded-2xl'>\n\t\t\t\t<Disclosure as='div' className='mt-2'>\n\t\t\t\t\t{({ open }) => (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<Disclosure.Button className='flex justify-between w-full px-4 py-2 text-sm font-medium text-left text-purple-900 bg-purple-100 rounded-lg hover:bg-purple-200 focus:outline-none focus-visible:ring focus-visible:ring-purple-500 focus-visible:ring-opacity-75'>\n\t\t\t\t\t\t\t\t<span>23-05-21 10:00</span>\n\t\t\t\t\t\t\t\t<HiArrowNarrowDown className={`${open ? 'transform rotate-180' : ''} w-5 h-5 text-purple-500`} />\n\t\t\t\t\t\t\t</Disclosure.Button>\n\t\t\t\t\t\t\t<Disclosure.Panel>\n\t\t\t\t\t\t\t\t<Disclosure as='div' className='mt-2'>\n\t\t\t\t\t\t\t\t\t{({ open }) => (\n\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t<Disclosure.Button className='flex justify-between w-full px-4 py-2 text-sm font-medium text-left text-purple-900 bg-purple-100 rounded-lg hover:bg-purple-200 focus:outline-none focus-visible:ring focus-visible:ring-purple-500 focus-visible:ring-opacity-75'>\n\t\t\t\t\t\t\t\t\t\t\t\t<span>Video</span>\n\t\t\t\t\t\t\t\t\t\t\t\t<HiArrowNarrowDown className={`${open ? 'transform rotate-180' : ''} w-5 h-5 text-purple-500`} />\n\t\t\t\t\t\t\t\t\t\t\t</Disclosure.Button>\n\t\t\t\t\t\t\t\t\t\t\t<Disclosure.Panel className='px-4 pt-4 pb-2 text-sm text-gray-500'>Ping: {videoData && videoData[0].ping}</Disclosure.Panel>\n\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Disclosure>\n\t\t\t\t\t\t\t</Disclosure.Panel>\n\t\t\t\t\t\t\t<Disclosure.Panel>\n\t\t\t\t\t\t\t\t<Disclosure as='div' className='mt-2'>\n\t\t\t\t\t\t\t\t\t{({ open }) => (\n\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t<Disclosure.Button className='flex justify-between w-full px-4 py-2 text-sm font-medium text-left text-purple-900 bg-purple-100 rounded-lg hover:bg-purple-200 focus:outline-none focus-visible:ring focus-visible:ring-purple-500 focus-visible:ring-opacity-75'>\n\t\t\t\t\t\t\t\t\t\t\t\t<span>Framing</span>\n\t\t\t\t\t\t\t\t\t\t\t\t<HiArrowNarrowDown className={`${open ? 'transform rotate-180' : ''} w-5 h-5 text-purple-500`} />\n\t\t\t\t\t\t\t\t\t\t\t</Disclosure.Button>\n\t\t\t\t\t\t\t\t\t\t\t<Disclosure.Panel className='px-4 pt-4 pb-2 text-sm text-gray-500'>Erros corrected: {framingData && framingData[0].errorsCorrected}</Disclosure.Panel>\n\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Disclosure>\n\t\t\t\t\t\t\t</Disclosure.Panel>\n\t\t\t\t\t\t\t<Disclosure.Panel>\n\t\t\t\t\t\t\t\t<Disclosure as='div' className='mt-2'>\n\t\t\t\t\t\t\t\t\t{({ open }) => (\n\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t<Disclosure.Button className='flex justify-between w-full px-4 py-2 text-sm font-medium text-left text-purple-900 bg-purple-100 rounded-lg hover:bg-purple-200 focus:outline-none focus-visible:ring focus-visible:ring-purple-500 focus-visible:ring-opacity-75'>\n\t\t\t\t\t\t\t\t\t\t\t\t<span>Encryption</span>\n\t\t\t\t\t\t\t\t\t\t\t\t<HiArrowNarrowDown className={`${open ? 'transform rotate-180' : ''} w-5 h-5 text-purple-500`} />\n\t\t\t\t\t\t\t\t\t\t\t</Disclosure.Button>\n\t\t\t\t\t\t\t\t\t\t\t<Disclosure.Panel className='px-4 pt-4 pb-2 text-sm text-gray-500'>Type: {encryptionData && encryptionData[0].type}</Disclosure.Panel>\n\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Disclosure>\n\t\t\t\t\t\t\t</Disclosure.Panel>\n\t\t\t\t\t\t</>\n\t\t\t\t\t)}\n\t\t\t\t</Disclosure>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default History;\n","import React, {useEffect, useState} from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport {IFramingData} from \"../../types/api/data\";\nimport dayjs from \"dayjs\";\n\ntype IProps = { framingData: IFramingData[] };\n\nconst FramingChart: React.FC<IProps> = ({framingData }) => {\n\n    const [labels, setLabels] = useState<string[]>([]);\n\n    const makeDateData = () => {\n        setInterval(() => {\n            const date = dayjs(Date.now()).format('HH:mm:ss').toString();\n            setLabels([...labels, date]);\n        }, 10000);\n    };\n\n    useEffect(() => {\n        makeDateData();\n    }, [labels, setLabels]);\n\n    const data = {\n        labels,\n        datasets: [\n          {\n                label: 'Corrected errors',\n                data: framingData.map((d) => d.errorsCorrected),\n                backgroundColor: 'rgb(26,214,220)',\n            },\n        ],\n    };\n\n    const options = {\n        scales: {\n            yAxes: [\n                {\n                    stacked: true,\n                    ticks: {\n                        beginAtZero: true,\n                    },\n                },\n            ],\n            xAxes: [\n                {\n                    stacked: true,\n                },\n            ],\n        },\n    };\n\n\n    return <Bar data={data} options={options} type='bar'/>\n};\n\nexport default FramingChart;","import React from 'react';\nimport { IFramingData } from '../../types/api/data';\nimport FramingChart from \"../charts/FramingChart\";\n\ntype IProps = { data?: IFramingData[] };\n\nconst Framing: React.FC<IProps> = ({ data }) => {\n\treturn (\n\t\t<div>\n\t\t\t<div className='w-full px-4 p-5'>\n\t\t\t\t<h1 className='text-center text-2xl'>\n\t\t\t\t\tFRAMING DATA\n\t\t\t\t</h1>\n\t\t\t</div>\n\n\t\t\t<FramingChart framingData={data ?? []}/>\n\t\t</div>\n\t);\n};\n\nexport default Framing;\n","import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport axios from 'axios';\nimport {HiAdjustments, HiCog} from \"react-icons/hi\";\nimport {FaHistory} from \"react-icons/fa\";\n\nconst Settings: React.FC = () => {\n\tconst {\n\t\tregister,\n\t\thandleSubmit,\n\t\tformState: { errors }\n\t} = useForm();\n\tconst onSubmit = (data: unknown) => {\n\t\tconsole.log(data);\n\t\taxios\n\t\t\t.post('http://localhost:4000/settings', data)\n\t\t\t.then(() => console.log('Form data posted'))\n\t\t\t.catch(() => console.log('Failed to post'));\n\t};\n\tconsole.log(errors);\n\n\tconst inputClassName =\n\t\t'w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm';\n\n\treturn (\n\t\t<form onSubmit={handleSubmit(onSubmit)} className='my-8 mx-4 pb-8 space-y-4 text-center'>\n\n\t\t\t<div className='w-full px-4'>\n\t\t\t\t<h1 className='text-center text-2xl'>\n\t\t\t\t\t<HiAdjustments className='mr-2 inline' />\n\t\t\t\t\tSettings\n\t\t\t\t</h1>\n\t\t\t</div>\n\n\t\t\t<input type='text' placeholder='Shared timestamp' className={inputClassName} {...register('Shared timestamp', {})} />\n\n\t\t\t<div className= 'font-bold text-left'>\n\t\t\t\t<p> Encryption</p>\n\t\t\t</div>\n\n\t\t\t<input type='number' placeholder='Encryption process time' className={inputClassName} {...register('Encryption process time', {})} />\n\t\t\t<input type='text' placeholder='Encryption type' className={inputClassName} {...register('Encryption type', {})} />\n\t\t\t<input type='number' placeholder='Encryption encrypted' className={inputClassName} {...register('Encryption encrypted', {})} />\n\n\t\t\t<div className= 'font-bold text-left'>\n\t\t\t\t<p> Framing </p>\n\t\t\t</div>\n\n\t\t\t<input type='number' placeholder='Framing process time' className={inputClassName} {...register('Framing process time', {})} />\n\t\t\t<input type='number' placeholder='Framing errors detected' className={inputClassName} {...register('Framing errors detected', {})} />\n\t\t\t<input type='number' placeholder='Framing errors corrected' className={inputClassName} {...register('Framing errors corrected', {})} />\n\t\t\t<input type='number' placeholder='Framing error det rate' className={inputClassName} {...register('Framing error det rate', {})} />\n\t\t\t<input type='number' placeholder='Framing error corr rate' className={inputClassName} {...register('Framing error corr rate', {})} />\n\n\t\t\t<div className= 'font-bold text-left'>\n\t\t\t\t<p> Video</p>\n\t\t\t</div>\n\n\t\t\t<input type='number' placeholder='Video max package size' className={inputClassName} {...register('Video max package size', {})} />\n\t\t\t<input type='number' placeholder='Video min package size' className={inputClassName} {...register('Video min package size', {})} />\n\t\t\t<input type='text' placeholder='Video protocol version' className={inputClassName} {...register('Video protocol version', {})} />\n\t\t\t<input type='text' placeholder='Video protocol' className={inputClassName} {...register('Video protocol', {})} />\n\t\t\t<input type='number' placeholder='Video bit rate' className={inputClassName} {...register('Video bit rate', {})} />\n\t\t\t<input type='number' placeholder='Video ping' className={inputClassName} {...register('Video ping', {})} />\n\n\t\t\t<div className= 'font-bold text-left'>\n\t\t\t\t<p> Link</p>\n\t\t\t</div>\n\n\t\t\t<input type='number' placeholder='Link process time' className={inputClassName} {...register('Link process time', {})} />\n\t\t\t<input type='number' placeholder='Link video packets received' className={inputClassName} {...register('Link video packets received', {})} />\n\t\t\t<input type='number' placeholder='Link video delay' className={inputClassName} {...register('Link video delay', {})} />\n\t\t\t<input type='number' placeholder='Link framing errors detected' className={inputClassName} {...register('Link framing errors detected', {})} />\n\t\t\t<input type='number' placeholder='Link framing errors corrected' className={inputClassName} {...register('Link framing errors corrected', {})} />\n\t\t\t<input className='px-4 py-2 bg-red-400 rounded-lg text-white' type='submit' />\n\t\t</form>\n\t);\n};\nexport default Settings;\n","import axios from 'axios';\n\nconst API_URLS = {\n\tlocalhost: 'http://localhost:4000'\n};\n\nexport const backend = axios.create({\n\tbaseURL: `${API_URLS.localhost}/`,\n\ttimeout: 2000,\n});\n","import React from 'react';\nimport {HiExclamationCircle} from \"react-icons/all\";\n\nconst ErrorMessage: React.FC = () => {\n\treturn (\n\t\t<div>\n\t\t\t<div className='w-full px-4 p-20'>\n\t\t\t\t<h1 className='text-center text-2xl'>\n\t\t\t\t\tConnection to server failed <HiExclamationCircle/>\n\t\t\t\t</h1>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default ErrorMessage;\n","import React, { useEffect, useState } from 'react';\nimport {HiAdjustments, HiHome} from 'react-icons/hi';\nimport { IMenuItem } from './types/MenuItems';\nimport { IEncryptionData, IFramingData, IVideoData } from './types/api/data';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport CardList from './components/containers/CardList';\nimport Navigation from './components/navigation/Navigation';\nimport Video from './components/containers/Video';\nimport History from './components/containers/History';\nimport { FaHistory } from 'react-icons/fa';\nimport Framing from './components/containers/Framing';\nimport Settings from './components/containers/Settings';\nimport { backend } from './api';\nimport ErrorMessage from \"./components/containers/ErrorMessage\";\n\nconst menuItems: IMenuItem[] = [\n\t{\n\t\tid: 0,\n\t\ttitle: 'History',\n\t\tlink: '/history',\n\t\ticon: <FaHistory />\n\t},\n\t{\n\t\tid: 1,\n\t\ttitle: 'Home',\n\t\tlink: '/',\n\t\ticon: <HiHome />\n\t},\n\t{\n\t\tid: 2,\n\t\ttitle: 'Settings',\n\t\tlink: '/settings',\n\t\ticon: <HiAdjustments/>\n\t}\n];\n\nconst App: React.FC = () => {\n\tconst INTERVAL = 10000; // in milliseconds\n\tconst MAX_LENGTH = 30;\n\tconst [videoData, setVideoData] = useState<IVideoData[]>([]);\n\tconst [framingData, setFramingData] = useState<IFramingData[]>([]);\n\tconst [encryptionData, setEncryptionData] = useState<IEncryptionData[]>([]);\n\n\tasync function pollData<T>(acc: any[], setter: any, endpoint: string): Promise<void> {\n\t\tconst response = await backend.get<T>(endpoint);\n\t\tif (acc.length === MAX_LENGTH) acc.shift();\n\t\tconst newData = [...acc, response?.data];\n\t\tsetter(newData);\n\t\tsetTimeout(() => pollData(newData, setter, endpoint), INTERVAL);\n\t}\n\n\tuseEffect(() => {\n\t\tpollData(videoData, setVideoData, 'video').catch(() => console.log('Could not connect to server'));\n\t\tpollData(framingData, setFramingData, 'framing').catch(() => console.log('Could not connect to server'));\n\t\tpollData(encryptionData, setEncryptionData, 'encryption').catch(() => console.log('Could not connect to server'));\n\t}, []);\n\n\treturn (\n\t\t<Router>\n\t\t\t<Switch>\n\t\t\t\t<Route path='/video'>\n\t\t\t\t\t<Video data={videoData} />\n\t\t\t\t</Route>\n\t\t\t\t<Route path='/framing'>\n\t\t\t\t\t<Framing data={framingData} />\n\t\t\t\t</Route>\n\t\t\t\t{/*\n\t\t\t\t<Route path='/encryption'>\n\t\t\t\t\t<Encryption data={encryptionData} />\n\t\t\t\t</Route>\n\t\t\t\t*/}\n\t\t\t\ticonClassName\n\t\t\t\t<Route path='/history'>\n\t\t\t\t\t<History videoData={videoData} framingData={framingData} encryptionData={encryptionData} />\n\t\t\t\t</Route>\n\t\t\t\t<Route path='/settings'>\n\t\t\t\t\t<Settings />\n\t\t\t\t</Route>\n\t\t\t\t<Route path='/error'>\n\t\t\t\t\t<ErrorMessage/>\n\t\t\t\t</Route>\n\t\t\t\t<Route path='/'>\n\t\t\t\t\t<CardList videoData={videoData[videoData.length - 1]} framingData={framingData[framingData.length - 1]} encryptionData={encryptionData[encryptionData.length - 1]} />\n\t\t\t\t</Route>\n\n\n\t\t\t</Switch>\n\t\t\t<Navigation menuItems={menuItems} />\n\t\t</Router>\n\t);\n};\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t// [::1] is the IPv6 localhost address.\n\twindow.location.hostname === '[::1]' ||\n\t// 127.0.0.0/8 are considered localhost for IPv4.\n\twindow.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n\tonSuccess?: (registration: ServiceWorkerRegistration) => void;\n\tonUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t'worker. To learn more, visit https://cra.link/PWA'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then((registration) => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://cra.link/PWA.'\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl, {\n\t\theaders: { 'Service-Worker': 'script' },\n\t})\n\t\t.then((response) => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type');\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null && contentType.indexOf('javascript') === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log('No internet connection found. App is running in offline mode.');\n\t\t});\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready\n\t\t\t.then((registration) => {\n\t\t\t\tregistration.unregister();\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.error(error.message);\n\t\t\t});\n\t}\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n\tif (onPerfEntry) {\n\t\timport('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n\t\t\tgetCLS(onPerfEntry);\n\t\t\tgetFID(onPerfEntry);\n\t\t\tgetFCP(onPerfEntry);\n\t\t\tgetLCP(onPerfEntry);\n\t\t\tgetTTFB(onPerfEntry);\n\t\t});\n\t}\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/global.css';\nimport './styles/tailwind.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}